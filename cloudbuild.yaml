# cloudbuild.yaml
steps:
  # Step 1: Build and package the application using Maven
  - name: 'maven:3.9-eclipse-temurin-17'
    entrypoint: mvn
    args: ['clean', 'package', '-DskipTests']

  # Step 2: Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$COMMIT_SHA',
      '-t', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:latest',
      '.'
    ]

  # Step 3: Push Docker images to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$COMMIT_SHA']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:latest']

  # Step 4: Deploy to Cloud Run (single instance)
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image'
      - 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$COMMIT_SHA'
      - '--region'
      - 'europe-west1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--service-account'
      - '${_SERVICE_ACCOUNT}'
      - '--memory'
      - '2Gi'
      - '--cpu'
      - '2'
      - '--min-instances'
      - '1'
      - '--max-instances'
      - '1'  # ⚠️ Force a single instance //TODO change strategy et implementer un stockage commun
      - '--timeout'
      - '300'
      - '--cpu-boost'
      - '--concurrency'
      - '1000'
      - '--port'
      - '80'
      - '--set-env-vars'
      - 'SERVICE_NAME=${_SERVICE_NAME},SPRING_PROFILES_ACTIVE=docker'
      - '--execution-environment'
      - 'gen2'

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
