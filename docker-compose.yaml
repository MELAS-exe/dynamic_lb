version: '3.8'

services:
  # Redis for shared state management
  redis:
    image: redis:7-alpine
    container_name: redis-state
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - loadbalancer-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  # Load Balancer Instance 1
  loadbalancer1:
    image: dynamic-loadbalancer:latest
    container_name: loadbalancer-app-1
    ports:
      - "81:80"  # Nginx
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - INSTANCE_ID=lb-instance-1
      - JAVA_OPTS=-Xmx512m -Xms256m
    networks:
      - loadbalancer-network
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/nginx-health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # Load Balancer Instance 2
  loadbalancer2:
    image: dynamic-loadbalancer:latest
    container_name: loadbalancer-app-2
    ports:
      - "82:80"  # Nginx
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - INSTANCE_ID=lb-instance-2
      - JAVA_OPTS=-Xmx512m -Xms256m
    networks:
      - loadbalancer-network
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/nginx-health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

networks:
  loadbalancer-network:
    driver: bridge

volumes:
  redis-data:
    driver: local