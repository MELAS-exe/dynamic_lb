worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 8192;
    multi_accept on;
}

http {
    resolver 8.8.8.8 ipv6=off valid=300s;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    map_hash_bucket_size 128;
    map_hash_max_size 2048;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'upstream: $upstream_addr status: $upstream_status '
                    'backend_proxy: $upstream_addr '
                    'request_uri: $request_uri';

    access_log /var/log/nginx/access.log main;
    sendfile on;
    keepalive_timeout 65;

    # ============================================
    # Dynamic configuration (backend proxies + upstream)
    # Generated by Spring Boot application
    # ============================================
    include /nginx-config/upstream.conf;

    # ============================================
    # Main Server (Port 80)
    # ============================================
    server {
        listen 80;
        server_name _;

        # Health check NGINX
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # API de management Spring Boot
        location /api/ {
            proxy_pass http://localhost:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Main proxy location - Uses upstream with TRUE round-robin
        location / {
            # Proxy to upstream (which uses weighted round-robin)
            # This distributes to localhost proxies (8081, 8082, etc.)
            # which then forward to actual backends
            proxy_pass http://backend;

            # Standard proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            # HTTP 1.1 for keepalive
            proxy_http_version 1.1;
            proxy_set_header Connection "";

            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }
    }
}
